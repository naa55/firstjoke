
    <?php if(isset($error)): ?>
        <p><?= $error ?></p>
        <?php else: ?>
            <blockquote>
                <p class="jokes">
                    <?php foreach($jokes as $joke) : ?>
                    <?= htmlspecialchars($joke["joketext"], ENT_QUOTES, "UTF-8") ?>
                    <form action="deletejoke.php" method="post">
                        <input type="hidden" name="id"
                        value="<?=$joke['id']?>">
                        <input type="submit" value="Delete">
                    </form>
                </p>
            </blockquote>
    <?php endforeach; ?>
    <?php endif; ?>

        function insert($pdo, $table, $fields) {
            $query = 'INSERT INTO `' . $table . '` (';
            foreach ($fields as $key => $value) {
                $query .= '`' . $key . '`,';
                }
                $query = rtrim($query, ',');
                $query .= ') VALUES (';
                foreach ($fields as $key => $value) {
                $query .= ':' . $key . ',';
                }
                $query = rtrim($query, ',');
                $query .= ')';
                $fields = processDates($fields);
                query($pdo, $query, $fields);
                }
                

                 $result = findAll($pdo, 'jokes');

        $jokes = [];
        foreach ($result as $joke) {
        $author = findById($pdo, 'author', 'id',
        $joke['authorid']);
        $jokes[] = [
        'id' => $joke['id'],
        'joketext' => $joke['joketext'],
        'jokedate' => $joke['jokedate'],
        'name' => $author['name'],
        'email' => $author['email']
        ];
        }
        $title = 'Joke list';

        $totalJoke = total($pdo, 'jokes');

        author88
        Quotes88$
        //classess










        <?php
class DatabaseTable
{
private $pdo;
private $table;
private $primaryKey;
public function __construct(PDO $pdo, string $table,
string $primaryKey)
{
$this->pdo = $pdo;
$this->table = $table;
$this->primaryKey = $primaryKey;
}
private function query($sql, $parameters = [])
{
$query = $this->pdo->prepare($sql);
$query->execute($parameters);
return $query;
}
public function total()
{
$query = $this->query('SELECT COUNT(*) FROM
`' . $this->table . '`');
$row = $query->fetch();
return $row[0];
}
public function findById($value)
{
$query = 'SELECT * FROM `' . $this->table . '` WHERE `' .
$this->primaryKey . '` = :value';
$parameters = [
'value' => $value
];
$query = $this->query($query, $parameters);
return $query->fetch();
}
private function insert($fields)
{
$query = 'INSERT INTO `' . $this->table . '` (';
foreach ($fields as $key => $value) {
$query .= '`' . $key . '`,';
}
$query = rtrim($query, ',');
$query .= ') VALUES (';
foreach ($fields as $key => $value) {
$query .= ':' . $key . ',';
}
$query = rtrim($query, ',');
$query .= ')';
$fields = $this->processDates($fields);
$this->query($query, $fields);
}
private function update($fields)
{
$query = ' UPDATE `' . $this->table .'` SET ';
foreach ($fields as $key => $value) {
$query .= '`' . $key . '` = :' . $key . ',';
}
$query = rtrim($query, ',');
$query .= ' WHERE `' . $this->primaryKey . '` =
:primaryKey';
// Set the :primaryKey variable
$fields['primaryKey'] = $fields['id'];
$fields = $this->processDates($fields);
$this->query($query, $fields);
}
public function delete($id)
{
$parameters = [':id' => $id];
$this->query('DELETE FROM `' . $this->table . '` WHERE
`' . $this->primaryKey . '` = :id', $parameters);
}
public function findAll()
{
$result = $this->query('SELECT * FROM ' .
$this->table);
return $result->fetchAll();
}
private function processDates($fields)
{
    foreach ($fields as $key => $value) {
        if ($value instanceof DateTime) {
        $fields[$key] = $value->format('Y-m-d');
        }
        }
        return $fields;
        }
        public function save($record)
        {
        try {
        if ($record[$this->primaryKey] == '') {
        $record[$this->primaryKey] = null;
        }
        $this->insert($record);
        } catch (PDOException $e) {
        $this->update($record);
        }
        }
        }

        //NAVBAR
          <nav class="navbar">
        <header>
            <h1>Internet Joke Database</h1>
        </header>
            <ul class="list">
            <li><a
            href="/">Home</a></li>
            <li><a href="/joke/list">Jokes List</a></li>
            <li><a href="/joke/edit">Add a new Joke</a></li>
            <li><a href="/profile/edit">Create Profile</a></li>
            <li><a href="/profile/my">View Profile</a></li>
            <li><a href="/joke/favlist">Fav</a></li>
            <?php if ($loggedIn): ?>
                    </li>
                    <li><a href="/logout">Log out</a>
                    </li>
                <?php else: ?>
                    <li><a href="/login">Log in</a></li>
                <?php endif; ?>
            </ul>
        </nav>